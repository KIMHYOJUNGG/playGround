<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="week">	
	<!-- 주간순위 현재 1등자 -->
	<select id="weekendtop" resultType="String">
		select writer from time where rownum= 1
	</select>
	
	<!-- insert -->
	<insert id="inserttime">
		insert into time (select bno,bookname,writer,count(good),null,sysdate,0 from board where bno not in (select bno from time) group by bno, bookname, writer, sysdate)
	</insert>
	
	<!-- 책에 속한 게시글의 좋아요 수 증가시의 time테이블 cnt 증가 -->
	<update id="updatetimecnt">
		update time set cnt=cnt+1 where bno=#{bno}
	</update>
	
	<!-- 책에 속한 게시글의 좋아요 수 취소시의 time테이블 cnt 증가 -->
	<update id="updatetimedel">
		update time set cnt=cnt-1 where bno=#{bno}
	</update>
	
	<!--regdate와 lastweek날짜 비교  -->
	<select id="castweek" resultType="int">
		select cast(sysdate-(min(regdate))as int) col from time where rownum= 1
	</select>
	
	<!-- 이번주 우승자 정보찾기 -->
	<select id="search" resultType="hashmap">
		select bno,writer,btitle from time where cnt in (select max(cnt) from time)
	</select>
	
	<!-- publish 테이블에 이미 있는 책인가 -->
	<select id="selectBno" resultType="hashmap">
		select * from publish where bno = #{bno}
	</select>
	
	<!-- 우승자가 나올시 출간테이블(publish)에 정보저장 -->
	<insert id="publish">
		insert into publish values(publish_seq,{#bno},{#btitle},{#writer},'N','null','N')
	</insert>
	
	<!-- 주간순위 리셋 -->
	<update id="updateWeek">
		update time3 set lastweek=regdate, regdate=sysdate ,cnt=0, lastcnt=cnt
	</update>
	
	<!-- 게시글 삭제시 주간순위에 있을 때 해당 게시글의 좋아요수만큼 감소-->
	<update id="updatecnt">
		update time set cnt= cnt-(select count(good) from board where bno = #{bno}) where bno=#{bno}
	</update>
	
	<!-- 책삭제시 주간순위에 있을 때의 삭제 -->
	<delete id="deletebno">
		delete from time where bno = #{bno}
	</delete>
	
	<!-- 책을 출간할 수 있는 권한 삭제 -->
	<delete id="deletepublish">
		delete from publish where bno=#{bno}
	</delete>
	
	<!-- 출간신청을 할 수 있는지에 대한  -->
	<select id="searchPublish" resultType="hashmap">
		select * from publish where writer = #{id}
	</select>
	
	<!-- 출간신청 -->
	<update id="publishupdateYN">
		update publish set yn='Y',pdate=sysdate where writer=#{id} and btitle=#{btitle}
	</update>
	
	<!-- 출간날짜 -->
	<select id="searchYN" resultType="int">
		select count(*) from publish where writer= #{id} and yn='Y'
	</select>
	
	<!-- 출간일 비교 -->
	<select id="searchDate" resultType="int">
		select cast((sysdate-pdate)as int) col from publish where writer=#{id} and btitle=#{btitle} and ok = 'N'
	</select>
	
	<!-- 30일이 넘었을 때 -->
	<update id="publishUpdatBno">
		update publish set ok='Y' where writer=#{id} and btitle=#{btitle}
	</update>
	
	
</mapper>